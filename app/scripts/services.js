// Generated by CoffeeScript 1.6.3
'use strict';
var Resource;

angular.module('resourceFoundryServices', []);

angular.module('resourceFoundryServices').factory('keygen', function() {
  return function(string) {
    return string.toLowerCase().replace(" ", "");
  };
});

angular.module('resourceFoundryServices').service('Resource', Resource = (function() {
  function Resource() {}

  Resource.prototype.contructor = function($http, $q) {
    this.$http = $http;
    this.$q = $q;
    this.maps = this.$q.defer();
    this.resources = this.$q.defer();
    return this.fetchAll();
  };

  Resource.prototype.fetchAll = function() {
    return this.$http({
      method: 'GET',
      url: '/data.json'
    }).success(function(data, status, config) {
      this.resources.resolve(data);
      if (typeof maps === "undefined" || maps === null) {
        return this.maps.resolve({
          authors: _.uniq(_.flatten(_.pluck(data, "authors")), JSON.stringify),
          mediaTypes: _.map(_.uniq(_.flatten(_.pluck(data, "mediaType")), function(el) {
            return {
              key: el,
              value: el
            };
          })),
          topics: _.map(_.uniq(_.flatten(_.pluck(data, "topic"))), function(el) {
            return {
              key: el,
              value: el
            };
          })
        });
      }
    }).error(function() {
      console.log('data error has occurred');
      return this.resources.reject('error fetching data');
    });
  };

  Resource.prototype.getMaps = function() {
    return this.maps.promise;
  };

  Resource.prototype.getResources = function() {
    return this.resources.promise;
  };

  Resource.prototype.addResource = function(resource) {
    return this.resources.promise.then(function(resources) {
      return resources.push(resource);
    });
  };

  return Resource;

})());
